// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuizGame.Data;

#nullable disable

namespace QuizGame.Data.Migrations
{
    [DbContext(typeof(QuizGameContext))]
    partial class QuizGameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("QuizGame.Data.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AnswerId"));

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("integer");

                    b.HasKey("AnswerId");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            AnswerId = 1,
                            IsCorrect = true,
                            Name = "Paris",
                            QuestionId = 1
                        },
                        new
                        {
                            AnswerId = 2,
                            IsCorrect = false,
                            Name = "London",
                            QuestionId = 1
                        },
                        new
                        {
                            AnswerId = 3,
                            IsCorrect = false,
                            Name = "Berlin",
                            QuestionId = 1
                        },
                        new
                        {
                            AnswerId = 4,
                            IsCorrect = false,
                            Name = "Madrid",
                            QuestionId = 1
                        },
                        new
                        {
                            AnswerId = 5,
                            IsCorrect = true,
                            Name = "Harper Lee",
                            QuestionId = 2
                        },
                        new
                        {
                            AnswerId = 6,
                            IsCorrect = false,
                            Name = "Jane Austen",
                            QuestionId = 2
                        },
                        new
                        {
                            AnswerId = 7,
                            IsCorrect = false,
                            Name = "Mark Twain",
                            QuestionId = 2
                        },
                        new
                        {
                            AnswerId = 8,
                            IsCorrect = false,
                            Name = "Ernest Hemingway",
                            QuestionId = 2
                        },
                        new
                        {
                            AnswerId = 9,
                            IsCorrect = true,
                            Name = "Mars",
                            QuestionId = 3
                        },
                        new
                        {
                            AnswerId = 10,
                            IsCorrect = false,
                            Name = "Venus",
                            QuestionId = 3
                        },
                        new
                        {
                            AnswerId = 11,
                            IsCorrect = false,
                            Name = "Jupiter",
                            QuestionId = 3
                        },
                        new
                        {
                            AnswerId = 12,
                            IsCorrect = false,
                            Name = "Saturn",
                            QuestionId = 3
                        },
                        new
                        {
                            AnswerId = 13,
                            IsCorrect = true,
                            Name = "Blue Whale",
                            QuestionId = 4
                        },
                        new
                        {
                            AnswerId = 14,
                            IsCorrect = false,
                            Name = "Elephant",
                            QuestionId = 4
                        },
                        new
                        {
                            AnswerId = 15,
                            IsCorrect = false,
                            Name = "Giraffe",
                            QuestionId = 4
                        },
                        new
                        {
                            AnswerId = 16,
                            IsCorrect = false,
                            Name = "Whale Shark",
                            QuestionId = 4
                        },
                        new
                        {
                            AnswerId = 17,
                            IsCorrect = true,
                            Name = "Vatican City",
                            QuestionId = 5
                        },
                        new
                        {
                            AnswerId = 18,
                            IsCorrect = false,
                            Name = "Monaco",
                            QuestionId = 5
                        },
                        new
                        {
                            AnswerId = 19,
                            IsCorrect = false,
                            Name = "Nauru",
                            QuestionId = 5
                        },
                        new
                        {
                            AnswerId = 20,
                            IsCorrect = false,
                            Name = "San Marino",
                            QuestionId = 5
                        },
                        new
                        {
                            AnswerId = 21,
                            IsCorrect = true,
                            Name = "H2O",
                            QuestionId = 6
                        },
                        new
                        {
                            AnswerId = 22,
                            IsCorrect = false,
                            Name = "O2",
                            QuestionId = 6
                        },
                        new
                        {
                            AnswerId = 23,
                            IsCorrect = false,
                            Name = "CO2",
                            QuestionId = 6
                        },
                        new
                        {
                            AnswerId = 24,
                            IsCorrect = false,
                            Name = "N2",
                            QuestionId = 6
                        },
                        new
                        {
                            AnswerId = 25,
                            IsCorrect = true,
                            Name = "Albert Einstein",
                            QuestionId = 7
                        },
                        new
                        {
                            AnswerId = 26,
                            IsCorrect = false,
                            Name = "Isaac Newton",
                            QuestionId = 7
                        },
                        new
                        {
                            AnswerId = 27,
                            IsCorrect = false,
                            Name = "Galileo Galilei",
                            QuestionId = 7
                        },
                        new
                        {
                            AnswerId = 28,
                            IsCorrect = false,
                            Name = "Nikola Tesla",
                            QuestionId = 7
                        },
                        new
                        {
                            AnswerId = 29,
                            IsCorrect = true,
                            Name = "Mitochondria",
                            QuestionId = 8
                        },
                        new
                        {
                            AnswerId = 30,
                            IsCorrect = false,
                            Name = "Nucleus",
                            QuestionId = 8
                        },
                        new
                        {
                            AnswerId = 31,
                            IsCorrect = false,
                            Name = "Ribosome",
                            QuestionId = 8
                        },
                        new
                        {
                            AnswerId = 32,
                            IsCorrect = false,
                            Name = "Endoplasmic Reticulum",
                            QuestionId = 8
                        },
                        new
                        {
                            AnswerId = 33,
                            IsCorrect = true,
                            Name = "Diamond",
                            QuestionId = 9
                        },
                        new
                        {
                            AnswerId = 34,
                            IsCorrect = false,
                            Name = "Gold",
                            QuestionId = 9
                        },
                        new
                        {
                            AnswerId = 35,
                            IsCorrect = false,
                            Name = "Iron",
                            QuestionId = 9
                        },
                        new
                        {
                            AnswerId = 36,
                            IsCorrect = false,
                            Name = "Quartz",
                            QuestionId = 9
                        },
                        new
                        {
                            AnswerId = 37,
                            IsCorrect = true,
                            Name = "299,792,458 m/s",
                            QuestionId = 10
                        },
                        new
                        {
                            AnswerId = 38,
                            IsCorrect = false,
                            Name = "150,000,000 m/s",
                            QuestionId = 10
                        },
                        new
                        {
                            AnswerId = 39,
                            IsCorrect = false,
                            Name = "1,080,000,000 km/h",
                            QuestionId = 10
                        },
                        new
                        {
                            AnswerId = 40,
                            IsCorrect = false,
                            Name = "100,000 km/s",
                            QuestionId = 10
                        },
                        new
                        {
                            AnswerId = 41,
                            IsCorrect = true,
                            Name = "George Washington",
                            QuestionId = 11
                        },
                        new
                        {
                            AnswerId = 42,
                            IsCorrect = false,
                            Name = "Thomas Jefferson",
                            QuestionId = 11
                        },
                        new
                        {
                            AnswerId = 43,
                            IsCorrect = false,
                            Name = "Abraham Lincoln",
                            QuestionId = 11
                        },
                        new
                        {
                            AnswerId = 44,
                            IsCorrect = false,
                            Name = "John Adams",
                            QuestionId = 11
                        },
                        new
                        {
                            AnswerId = 45,
                            IsCorrect = true,
                            Name = "1912",
                            QuestionId = 12
                        },
                        new
                        {
                            AnswerId = 46,
                            IsCorrect = false,
                            Name = "1905",
                            QuestionId = 12
                        },
                        new
                        {
                            AnswerId = 47,
                            IsCorrect = false,
                            Name = "1898",
                            QuestionId = 12
                        },
                        new
                        {
                            AnswerId = 48,
                            IsCorrect = false,
                            Name = "1920",
                            QuestionId = 12
                        },
                        new
                        {
                            AnswerId = 49,
                            IsCorrect = true,
                            Name = "Christopher Columbus",
                            QuestionId = 13
                        },
                        new
                        {
                            AnswerId = 50,
                            IsCorrect = false,
                            Name = "Ferdinand Magellan",
                            QuestionId = 13
                        },
                        new
                        {
                            AnswerId = 51,
                            IsCorrect = false,
                            Name = "Marco Polo",
                            QuestionId = 13
                        },
                        new
                        {
                            AnswerId = 52,
                            IsCorrect = false,
                            Name = "James Cook",
                            QuestionId = 13
                        },
                        new
                        {
                            AnswerId = 53,
                            IsCorrect = true,
                            Name = "Neil Armstrong",
                            QuestionId = 14
                        },
                        new
                        {
                            AnswerId = 54,
                            IsCorrect = false,
                            Name = "Buzz Aldrin",
                            QuestionId = 14
                        },
                        new
                        {
                            AnswerId = 55,
                            IsCorrect = false,
                            Name = "Yuri Gagarin",
                            QuestionId = 14
                        },
                        new
                        {
                            AnswerId = 56,
                            IsCorrect = false,
                            Name = "Michael Collins",
                            QuestionId = 14
                        },
                        new
                        {
                            AnswerId = 57,
                            IsCorrect = true,
                            Name = "American Civil War",
                            QuestionId = 15
                        },
                        new
                        {
                            AnswerId = 58,
                            IsCorrect = false,
                            Name = "World War I",
                            QuestionId = 15
                        },
                        new
                        {
                            AnswerId = 59,
                            IsCorrect = false,
                            Name = "World War II",
                            QuestionId = 15
                        },
                        new
                        {
                            AnswerId = 60,
                            IsCorrect = false,
                            Name = "Spanish-American War",
                            QuestionId = 15
                        },
                        new
                        {
                            AnswerId = 61,
                            IsCorrect = true,
                            Name = "Nile River",
                            QuestionId = 16
                        },
                        new
                        {
                            AnswerId = 62,
                            IsCorrect = false,
                            Name = "Amazon River",
                            QuestionId = 16
                        },
                        new
                        {
                            AnswerId = 63,
                            IsCorrect = false,
                            Name = "Yangtze River",
                            QuestionId = 16
                        },
                        new
                        {
                            AnswerId = 64,
                            IsCorrect = false,
                            Name = "Mississippi River",
                            QuestionId = 16
                        },
                        new
                        {
                            AnswerId = 65,
                            IsCorrect = true,
                            Name = "Asia",
                            QuestionId = 17
                        },
                        new
                        {
                            AnswerId = 66,
                            IsCorrect = false,
                            Name = "Africa",
                            QuestionId = 17
                        },
                        new
                        {
                            AnswerId = 67,
                            IsCorrect = false,
                            Name = "North America",
                            QuestionId = 17
                        },
                        new
                        {
                            AnswerId = 68,
                            IsCorrect = false,
                            Name = "Europe",
                            QuestionId = 17
                        },
                        new
                        {
                            AnswerId = 69,
                            IsCorrect = true,
                            Name = "China",
                            QuestionId = 18
                        },
                        new
                        {
                            AnswerId = 70,
                            IsCorrect = false,
                            Name = "India",
                            QuestionId = 18
                        },
                        new
                        {
                            AnswerId = 71,
                            IsCorrect = false,
                            Name = "USA",
                            QuestionId = 18
                        },
                        new
                        {
                            AnswerId = 72,
                            IsCorrect = false,
                            Name = "Indonesia",
                            QuestionId = 18
                        },
                        new
                        {
                            AnswerId = 73,
                            IsCorrect = true,
                            Name = "Australia",
                            QuestionId = 19
                        },
                        new
                        {
                            AnswerId = 74,
                            IsCorrect = false,
                            Name = "Europe",
                            QuestionId = 19
                        },
                        new
                        {
                            AnswerId = 75,
                            IsCorrect = false,
                            Name = "South America",
                            QuestionId = 19
                        },
                        new
                        {
                            AnswerId = 76,
                            IsCorrect = false,
                            Name = "Antarctica",
                            QuestionId = 19
                        },
                        new
                        {
                            AnswerId = 77,
                            IsCorrect = true,
                            Name = "Sweden",
                            QuestionId = 20
                        },
                        new
                        {
                            AnswerId = 78,
                            IsCorrect = false,
                            Name = "Finland",
                            QuestionId = 20
                        },
                        new
                        {
                            AnswerId = 79,
                            IsCorrect = false,
                            Name = "Norway",
                            QuestionId = 20
                        },
                        new
                        {
                            AnswerId = 80,
                            IsCorrect = false,
                            Name = "Canada",
                            QuestionId = 20
                        },
                        new
                        {
                            AnswerId = 81,
                            IsCorrect = true,
                            Name = "3.14",
                            QuestionId = 21
                        },
                        new
                        {
                            AnswerId = 82,
                            IsCorrect = false,
                            Name = "2.71",
                            QuestionId = 21
                        },
                        new
                        {
                            AnswerId = 83,
                            IsCorrect = false,
                            Name = "1.62",
                            QuestionId = 21
                        },
                        new
                        {
                            AnswerId = 84,
                            IsCorrect = false,
                            Name = "0",
                            QuestionId = 21
                        },
                        new
                        {
                            AnswerId = 85,
                            IsCorrect = true,
                            Name = "4",
                            QuestionId = 22
                        },
                        new
                        {
                            AnswerId = 86,
                            IsCorrect = false,
                            Name = "3",
                            QuestionId = 22
                        },
                        new
                        {
                            AnswerId = 87,
                            IsCorrect = false,
                            Name = "5",
                            QuestionId = 22
                        },
                        new
                        {
                            AnswerId = 88,
                            IsCorrect = false,
                            Name = "6",
                            QuestionId = 22
                        },
                        new
                        {
                            AnswerId = 89,
                            IsCorrect = true,
                            Name = "4",
                            QuestionId = 23
                        },
                        new
                        {
                            AnswerId = 90,
                            IsCorrect = false,
                            Name = "5",
                            QuestionId = 23
                        },
                        new
                        {
                            AnswerId = 91,
                            IsCorrect = false,
                            Name = "6",
                            QuestionId = 23
                        },
                        new
                        {
                            AnswerId = 92,
                            IsCorrect = false,
                            Name = "7",
                            QuestionId = 23
                        },
                        new
                        {
                            AnswerId = 93,
                            IsCorrect = true,
                            Name = "9.8 m/s^2",
                            QuestionId = 24
                        },
                        new
                        {
                            AnswerId = 94,
                            IsCorrect = false,
                            Name = "3.14 m/s^2",
                            QuestionId = 24
                        },
                        new
                        {
                            AnswerId = 95,
                            IsCorrect = false,
                            Name = "2.71 m/s^2",
                            QuestionId = 24
                        },
                        new
                        {
                            AnswerId = 96,
                            IsCorrect = false,
                            Name = "1.62 m/s^2",
                            QuestionId = 24
                        },
                        new
                        {
                            AnswerId = 97,
                            IsCorrect = true,
                            Name = "2x",
                            QuestionId = 25
                        },
                        new
                        {
                            AnswerId = 98,
                            IsCorrect = false,
                            Name = "x^2",
                            QuestionId = 25
                        },
                        new
                        {
                            AnswerId = 99,
                            IsCorrect = false,
                            Name = "1/x",
                            QuestionId = 25
                        },
                        new
                        {
                            AnswerId = 100,
                            IsCorrect = false,
                            Name = "x",
                            QuestionId = 25
                        });
                });

            modelBuilder.Entity("QuizGame.Data.Models.Error", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Errors");
                });

            modelBuilder.Entity("QuizGame.Data.Models.Game", b =>
                {
                    b.Property<int>("GameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GameId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("character varying(6)");

                    b.Property<int>("QuizId")
                        .HasColumnType("integer");

                    b.Property<int>("Score")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("GameId");

                    b.HasIndex("QuizId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("QuizGame.Data.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QuestionId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("QuizId")
                        .HasColumnType("integer");

                    b.HasKey("QuestionId");

                    b.HasIndex("QuizId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            Name = "What is the capital of France?",
                            QuizId = 1
                        },
                        new
                        {
                            QuestionId = 2,
                            Name = "Who wrote 'To Kill a Mockingbird'?",
                            QuizId = 1
                        },
                        new
                        {
                            QuestionId = 3,
                            Name = "Which planet is known as the Red Planet?",
                            QuizId = 1
                        },
                        new
                        {
                            QuestionId = 4,
                            Name = "What is the largest mammal in the world?",
                            QuizId = 1
                        },
                        new
                        {
                            QuestionId = 5,
                            Name = "What is the smallest country in the world?",
                            QuizId = 1
                        },
                        new
                        {
                            QuestionId = 6,
                            Name = "What is the chemical symbol for water?",
                            QuizId = 2
                        },
                        new
                        {
                            QuestionId = 7,
                            Name = "Who developed the theory of relativity?",
                            QuizId = 2
                        },
                        new
                        {
                            QuestionId = 8,
                            Name = "What is the powerhouse of the cell?",
                            QuizId = 2
                        },
                        new
                        {
                            QuestionId = 9,
                            Name = "What is the hardest natural substance on Earth?",
                            QuizId = 2
                        },
                        new
                        {
                            QuestionId = 10,
                            Name = "What is the speed of light?",
                            QuizId = 2
                        },
                        new
                        {
                            QuestionId = 11,
                            Name = "Who was the first President of the United States?",
                            QuizId = 3
                        },
                        new
                        {
                            QuestionId = 12,
                            Name = "In which year did the Titanic sink?",
                            QuizId = 3
                        },
                        new
                        {
                            QuestionId = 13,
                            Name = "Who discovered America?",
                            QuizId = 3
                        },
                        new
                        {
                            QuestionId = 14,
                            Name = "What was the name of the first man on the moon?",
                            QuizId = 3
                        },
                        new
                        {
                            QuestionId = 15,
                            Name = "Which war was fought between the north and south regions in the United States?",
                            QuizId = 3
                        },
                        new
                        {
                            QuestionId = 16,
                            Name = "What is the longest river in the world?",
                            QuizId = 4
                        },
                        new
                        {
                            QuestionId = 17,
                            Name = "Which continent is the largest?",
                            QuizId = 4
                        },
                        new
                        {
                            QuestionId = 18,
                            Name = "Which country has the most population?",
                            QuizId = 4
                        },
                        new
                        {
                            QuestionId = 19,
                            Name = "What is the smallest continent?",
                            QuizId = 4
                        },
                        new
                        {
                            QuestionId = 20,
                            Name = "Which country has the most number of islands?",
                            QuizId = 4
                        },
                        new
                        {
                            QuestionId = 21,
                            Name = "What is the value of Pi?",
                            QuizId = 5
                        },
                        new
                        {
                            QuestionId = 22,
                            Name = "What is 2+2?",
                            QuizId = 5
                        },
                        new
                        {
                            QuestionId = 23,
                            Name = "What is the square root of 16?",
                            QuizId = 5
                        },
                        new
                        {
                            QuestionId = 24,
                            Name = "What is the value of the gravitational constant?",
                            QuizId = 5
                        },
                        new
                        {
                            QuestionId = 25,
                            Name = "What is the derivative of x^2?",
                            QuizId = 5
                        });
                });

            modelBuilder.Entity("QuizGame.Data.Models.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("QuizId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("QuizId");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            QuizId = 1,
                            Name = "General Knowledge"
                        },
                        new
                        {
                            QuizId = 2,
                            Name = "Science"
                        },
                        new
                        {
                            QuizId = 3,
                            Name = "History"
                        },
                        new
                        {
                            QuizId = 4,
                            Name = "Geography"
                        },
                        new
                        {
                            QuizId = 5,
                            Name = "Math"
                        });
                });

            modelBuilder.Entity("QuizGame.Data.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("QuizGame.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("QuizGame.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuizGame.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("QuizGame.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("QuizGame.Data.Models.Answer", b =>
                {
                    b.HasOne("QuizGame.Data.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuizGame.Data.Models.Game", b =>
                {
                    b.HasOne("QuizGame.Data.Models.Quiz", "Quiz")
                        .WithMany("Games")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("QuizGame.Data.Models.Question", b =>
                {
                    b.HasOne("QuizGame.Data.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("QuizGame.Data.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("QuizGame.Data.Models.Quiz", b =>
                {
                    b.Navigation("Games");

                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
